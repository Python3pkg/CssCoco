# Generated from java-escape by ANTLR 4.4
from antlr4 import *
from io import StringIO

def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2#")
        buf.write("\u00f2\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3")
        buf.write("\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\37\3\37\5\37\u00b0\n\37\3 \3 \3!\3!\3\"\3")
        buf.write("\"\3\"\3\"\7\"\u00ba\n\"\f\"\16\"\u00bd\13\"\3#\3#\3#")
        buf.write("\7#\u00c2\n#\f#\16#\u00c5\13#\5#\u00c7\n#\3$\3$\3$\7$")
        buf.write("\u00cc\n$\f$\16$\u00cf\13$\3$\3$\3%\3%\3%\3%\7%\u00d7")
        buf.write("\n%\f%\16%\u00da\13%\3%\3%\3%\3%\3%\3&\3&\3&\3&\7&\u00e5")
        buf.write("\n&\f&\16&\u00e8\13&\3&\3&\3\'\6\'\u00ed\n\'\r\'\16\'")
        buf.write("\u00ee\3\'\3\'\4\u00cd\u00d8\2(\3\3\5\4\7\5\t\6\13\7\r")
        buf.write("\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!")
        buf.write("\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\2;\2=\2?\2A\2C\36E\37G I!K\"M#\3\2\t\3\2))\4\2C\\")
        buf.write("c|\3\2\63;\3\2\62\62\4\2//aa\4\2\f\f\17\17\5\2\13\f\17")
        buf.write("\17\"\"\u00f7\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t")
        buf.write("\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3")
        buf.write("\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2")
        buf.write("\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2")
        buf.write("\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2")
        buf.write("\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2")
        buf.write("\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\3O\3\2\2\2\5W\3\2\2")
        buf.write("\2\7Z\3\2\2\2\t\\\3\2\2\2\13^\3\2\2\2\r`\3\2\2\2\17c\3")
        buf.write("\2\2\2\21j\3\2\2\2\23l\3\2\2\2\25o\3\2\2\2\27q\3\2\2\2")
        buf.write("\31s\3\2\2\2\33x\3\2\2\2\35z\3\2\2\2\37}\3\2\2\2!\u0080")
        buf.write("\3\2\2\2#\u0082\3\2\2\2%\u0084\3\2\2\2\'\u0086\3\2\2\2")
        buf.write(")\u0089\3\2\2\2+\u008f\3\2\2\2-\u0092\3\2\2\2/\u009a\3")
        buf.write("\2\2\2\61\u009c\3\2\2\2\63\u00a0\3\2\2\2\65\u00a2\3\2")
        buf.write("\2\2\67\u00a6\3\2\2\29\u00a8\3\2\2\2;\u00ab\3\2\2\2=\u00af")
        buf.write("\3\2\2\2?\u00b1\3\2\2\2A\u00b3\3\2\2\2C\u00b5\3\2\2\2")
        buf.write("E\u00c6\3\2\2\2G\u00c8\3\2\2\2I\u00d2\3\2\2\2K\u00e0\3")
        buf.write("\2\2\2M\u00ec\3\2\2\2OP\7t\2\2PQ\7g\2\2QR\7s\2\2RS\7w")
        buf.write("\2\2ST\7k\2\2TU\7t\2\2UV\7g\2\2V\4\3\2\2\2WX\7#\2\2XY")
        buf.write("\7?\2\2Y\6\3\2\2\2Z[\7}\2\2[\b\3\2\2\2\\]\7?\2\2]\n\3")
        buf.write("\2\2\2^_\7\177\2\2_\f\3\2\2\2`a\7>\2\2ab\7?\2\2b\16\3")
        buf.write("\2\2\2cd\7h\2\2de\7q\2\2ef\7t\2\2fg\7d\2\2gh\7k\2\2hi")
        buf.write("\7f\2\2i\20\3\2\2\2jk\7*\2\2k\22\3\2\2\2lm\7k\2\2mn\7")
        buf.write("u\2\2n\24\3\2\2\2op\7.\2\2p\26\3\2\2\2qr\7\60\2\2r\30")
        buf.write("\3\2\2\2st\7h\2\2tu\7k\2\2uv\7p\2\2vw\7f\2\2w\32\3\2\2")
        buf.write("\2xy\7]\2\2y\34\3\2\2\2z{\7@\2\2{|\7?\2\2|\36\3\2\2\2")
        buf.write("}~\7?\2\2~\177\7?\2\2\177 \3\2\2\2\u0080\u0081\7>\2\2")
        buf.write("\u0081\"\3\2\2\2\u0082\u0083\7_\2\2\u0083$\3\2\2\2\u0084")
        buf.write("\u0085\7@\2\2\u0085&\3\2\2\2\u0086\u0087\7q\2\2\u0087")
        buf.write("\u0088\7t\2\2\u0088(\3\2\2\2\u0089\u008a\7o\2\2\u008a")
        buf.write("\u008b\7c\2\2\u008b\u008c\7v\2\2\u008c\u008d\7e\2\2\u008d")
        buf.write("\u008e\7j\2\2\u008e*\3\2\2\2\u008f\u0090\7k\2\2\u0090")
        buf.write("\u0091\7p\2\2\u0091,\3\2\2\2\u0092\u0093\7o\2\2\u0093")
        buf.write("\u0094\7g\2\2\u0094\u0095\7u\2\2\u0095\u0096\7u\2\2\u0096")
        buf.write("\u0097\7c\2\2\u0097\u0098\7i\2\2\u0098\u0099\7g\2\2\u0099")
        buf.write(".\3\2\2\2\u009a\u009b\7+\2\2\u009b\60\3\2\2\2\u009c\u009d")
        buf.write("\7c\2\2\u009d\u009e\7p\2\2\u009e\u009f\7f\2\2\u009f\62")
        buf.write("\3\2\2\2\u00a0\u00a1\7-\2\2\u00a1\64\3\2\2\2\u00a2\u00a3")
        buf.write("\7p\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7v\2\2\u00a5\66")
        buf.write("\3\2\2\2\u00a6\u00a7\7/\2\2\u00a78\3\2\2\2\u00a8\u00a9")
        buf.write("\7^\2\2\u00a9\u00aa\t\2\2\2\u00aa:\3\2\2\2\u00ab\u00ac")
        buf.write("\t\3\2\2\u00ac<\3\2\2\2\u00ad\u00b0\5A!\2\u00ae\u00b0")
        buf.write("\5? \2\u00af\u00ad\3\2\2\2\u00af\u00ae\3\2\2\2\u00b0>")
        buf.write("\3\2\2\2\u00b1\u00b2\t\4\2\2\u00b2@\3\2\2\2\u00b3\u00b4")
        buf.write("\t\5\2\2\u00b4B\3\2\2\2\u00b5\u00bb\5;\36\2\u00b6\u00ba")
        buf.write("\5;\36\2\u00b7\u00ba\5=\37\2\u00b8\u00ba\t\6\2\2\u00b9")
        buf.write("\u00b6\3\2\2\2\u00b9\u00b7\3\2\2\2\u00b9\u00b8\3\2\2\2")
        buf.write("\u00ba\u00bd\3\2\2\2\u00bb\u00b9\3\2\2\2\u00bb\u00bc\3")
        buf.write("\2\2\2\u00bcD\3\2\2\2\u00bd\u00bb\3\2\2\2\u00be\u00c7")
        buf.write("\5A!\2\u00bf\u00c3\5? \2\u00c0\u00c2\5=\37\2\u00c1\u00c0")
        buf.write("\3\2\2\2\u00c2\u00c5\3\2\2\2\u00c3\u00c1\3\2\2\2\u00c3")
        buf.write("\u00c4\3\2\2\2\u00c4\u00c7\3\2\2\2\u00c5\u00c3\3\2\2\2")
        buf.write("\u00c6\u00be\3\2\2\2\u00c6\u00bf\3\2\2\2\u00c7F\3\2\2")
        buf.write("\2\u00c8\u00cd\t\2\2\2\u00c9\u00cc\59\35\2\u00ca\u00cc")
        buf.write("\n\2\2\2\u00cb\u00c9\3\2\2\2\u00cb\u00ca\3\2\2\2\u00cc")
        buf.write("\u00cf\3\2\2\2\u00cd\u00ce\3\2\2\2\u00cd\u00cb\3\2\2\2")
        buf.write("\u00ce\u00d0\3\2\2\2\u00cf\u00cd\3\2\2\2\u00d0\u00d1\t")
        buf.write("\2\2\2\u00d1H\3\2\2\2\u00d2\u00d3\7\61\2\2\u00d3\u00d4")
        buf.write("\7,\2\2\u00d4\u00d8\3\2\2\2\u00d5\u00d7\13\2\2\2\u00d6")
        buf.write("\u00d5\3\2\2\2\u00d7\u00da\3\2\2\2\u00d8\u00d9\3\2\2\2")
        buf.write("\u00d8\u00d6\3\2\2\2\u00d9\u00db\3\2\2\2\u00da\u00d8\3")
        buf.write("\2\2\2\u00db\u00dc\7,\2\2\u00dc\u00dd\7\61\2\2\u00dd\u00de")
        buf.write("\3\2\2\2\u00de\u00df\b%\2\2\u00dfJ\3\2\2\2\u00e0\u00e1")
        buf.write("\7\61\2\2\u00e1\u00e2\7\61\2\2\u00e2\u00e6\3\2\2\2\u00e3")
        buf.write("\u00e5\n\7\2\2\u00e4\u00e3\3\2\2\2\u00e5\u00e8\3\2\2\2")
        buf.write("\u00e6\u00e4\3\2\2\2\u00e6\u00e7\3\2\2\2\u00e7\u00e9\3")
        buf.write("\2\2\2\u00e8\u00e6\3\2\2\2\u00e9\u00ea\b&\2\2\u00eaL\3")
        buf.write("\2\2\2\u00eb\u00ed\t\b\2\2\u00ec\u00eb\3\2\2\2\u00ed\u00ee")
        buf.write("\3\2\2\2\u00ee\u00ec\3\2\2\2\u00ee\u00ef\3\2\2\2\u00ef")
        buf.write("\u00f0\3\2\2\2\u00f0\u00f1\b\'\2\2\u00f1N\3\2\2\2\r\2")
        buf.write("\u00af\u00b9\u00bb\u00c3\u00c6\u00cb\u00cd\u00d8\u00e6")
        buf.write("\u00ee\3\b\2\2")
        return buf.getvalue()
		

class cocoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__26 = 1
    T__25 = 2
    T__24 = 3
    T__23 = 4
    T__22 = 5
    T__21 = 6
    T__20 = 7
    T__19 = 8
    T__18 = 9
    T__17 = 10
    T__16 = 11
    T__15 = 12
    T__14 = 13
    T__13 = 14
    T__12 = 15
    T__11 = 16
    T__10 = 17
    T__9 = 18
    T__8 = 19
    T__7 = 20
    T__6 = 21
    T__5 = 22
    T__4 = 23
    T__3 = 24
    T__2 = 25
    T__1 = 26
    T__0 = 27
    Identifier = 28
    Integer = 29
    String = 30
    Comment = 31
    LineComment = 32
    WS = 33


    modeNames = [ "DEFAULT_MODE" ]

    tokenNames = [ "<INVALID>",
            "'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", 
            "'\\u0005'", "'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", 
            "'\\u000B'", "'\f'", "'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", 
            "'\\u0011'", "'\\u0012'", "'\\u0013'", "'\\u0014'", "'\\u0015'", 
            "'\\u0016'", "'\\u0017'", "'\\u0018'", "'\\u0019'", "'\\u001A'", 
            "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", "'\\u001F'", 
            "' '", "'!'" ]

    ruleNames = [ "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
                  "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
                  "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", 
                  "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
                  "T__0", "EscapeSequence", "Letter", "Digit", "NonZeroDigit", 
                  "ZeroDigit", "Identifier", "Integer", "String", "Comment", 
                  "LineComment", "WS" ]

    grammarFileName = "coco.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.4")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


